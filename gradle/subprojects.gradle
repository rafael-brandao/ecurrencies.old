ext {
    javaMarkup = [
        'src/main/java',
        'src/main/resources',
        'src/test/java',
        'src/test/resources'
    ]
    scalaMarkup = [
        'src/main/scala',
        'src/test/scala'
    ]
    protobufMarkup = /^.+\.proto$/
    distributionMarkup = 'src/dist'
}

def anySubdirectoryExists(project, list) {
    list.any {
        file("${project.projectDir}/${it}").isDirectory()
    }
}

subprojects.findAll {
    it.childProjects.size() == 0
}.each {
    def protobufFiles = it.projectDir.listFiles({ f ->f ==~ protobufMarkup } as FileFilter).toList()
    def isProtobufProject = protobufFiles.size() > 0
    def isDistributionProject = anySubdirectoryExists(it, distributionMarkup )
    def isScalaProject = anySubdirectoryExists(it, scalaMarkup )
    def isJavaProject = anySubdirectoryExists(it, javaMarkup ) || isProtobufProject || isScalaProject || isDistributionProject

    if(isProtobufProject) {
        protobufProjects.push it
        it.ext.protobufFiles = protobufFiles
    }
    if(isDistributionProject) distributionProjects.push it
    if(isScalaProject) scalaProjects.push it
    if(isJavaProject ) javaProjects.push it
}